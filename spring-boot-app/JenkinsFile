pipeline {
  agent {
    docker {
      image 'maven:3.9.6-eclipse-temurin-17'
      args '--user root --privileged -v /usr/bin/docker:/usr/bin/docker -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/jenkins/workspace/.m2:/root/.m2'
    }
  }

  stages {
    stage('Prepare') {
      steps {
        sh 'rm -rf spring-boot-app/target || true'
      }
    }

    stage('Checkout') {
      steps {
        git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/jkjhalkee/java-app.git'
      }
    }

    stage('Build and Test') {
      steps {
        dir('spring-boot-app') {
          sh 'mvn -B clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://43.205.196.195:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "jhalkee1/java-app:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh 'docker build -t ${DOCKER_IMAGE} -f spring-boot-app/Dockerfile .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "java-app"
        GIT_USER_NAME = "jkjhalkee"
      }
      steps {
        steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
                git config user.email "jkjhalkee@gmail.com"
                git config user.name "jhalkee"
                BUILD_NUMBER=${BUILD_NUMBER}
                sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                git add spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
        }
      }
    }
  }
}
